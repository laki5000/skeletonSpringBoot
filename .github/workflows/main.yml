name: My Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  spotless:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Check code formatting with Spotless
        run: mvn spotless:check --file pom.xml

  build:
    runs-on: ubuntu-latest
    needs: spotless
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -B package -DskipTests=true --file pom.xml

  unit_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run unit tests
        run: mvn test --file pom.xml

  jacoco:
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run JaCoCo coverage report
        run: mvn jacoco:report --file pom.xml
      - name: Check JaCoCo coverage
        run: |
          coverage=$(mvn jacoco:report -q exec:exec -DskipTests | grep 'JaCoCo coverage' | awk '{print $NF}' | tr -d '%')
          if (( $(echo "$coverage < 70" | bc -l) )); then
            echo "JaCoCo coverage is below 70%: $coverage%"
            exit 1
          fi

  integration_tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Run unit tests
        run: mvn failsafe:integration-test --file pom.xml

  spotbugs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -B package -DskipTests=true --file pom.xml
      - name: Run SpotBugs
        run: mvn spotbugs:check --file pom.xml
